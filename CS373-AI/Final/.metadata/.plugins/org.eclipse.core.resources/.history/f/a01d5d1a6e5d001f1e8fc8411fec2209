package project;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.StreamTokenizer;
import java.util.ArrayList;

import mdps.Gridworld.Coordinate;

public class ChessBoard{
	
	private int[][] stateLabels;
    private ArrayList<Coordinate> stateList = new ArrayList<Coordinate>();

	
	Piece[][] board;
	private int xDim, yDim;
	private boolean[][] wallMatrix;
	private double[][] rewardMatrix;
	
	private Piece[] mentors;
	private Piece[] observers;
	private PieceAction[] mentorActions;
	private PieceAction[] observerActions;

	public ChessBoard(String fileName) {
        // read in the array of locations
        try {
            BufferedReader reader = new BufferedReader(new FileReader(fileName));
            StreamTokenizer token = new StreamTokenizer(reader);
            token.nextToken();
            xDim = (int) token.nval;
            token.nextToken();
            yDim = (int) token.nval;
            wallMatrix = new boolean[xDim][yDim];
            rewardMatrix = new double[xDim][yDim];
            for (int i = 0; i < xDim; i++) {
                for (int j = 0; j < yDim; j++) {
                    token.nextToken();
                    if (token.ttype == StreamTokenizer.TT_NUMBER) {
                        rewardMatrix[i][j] = token.nval;
                        wallMatrix[i][j] = false;
                    } else {
                        wallMatrix[i][j] = true;
                    }
                }
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        initialize();        
    }
	
	 private void initialize() {
	        actionIds = new int[actions.length];
	        for (int i = 0; i < actions.length; i++) {
	            actionIds[i] = actions[i].getActionId();
	        }
	        stateLabels = new int[xDim][yDim];
	        int count = 0;
	        for (int i = 0; i < xDim; i++) {
	            for (int j = 0; j < yDim; j++) {
	                if(!wallMatrix[i][j]) {
	                    stateLabels[i][j] = count;
	                    stateList.add(new Coordinate(i, j));
	                    count++;

	                }
	            }
	        }
	        numStates = count;
	    }

}
